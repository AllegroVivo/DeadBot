from __future__ import annotations

from typing import TYPE_CHECKING, Any, List, Tuple, Optional

from .GuildData import GuildData

if TYPE_CHECKING:
    from discord import Guild

    from Classes import DeadBot
################################################################################

__all__ = ("GuildManager",)

################################################################################
class GuildManager:

    __slots__ = (
        "_state",
        "_guilds",
    )

################################################################################
##### INITIALIZATION ###########################################################
################################################################################
    def __init__(self, bot: DeadBot):

        self._state: DeadBot = bot
        self._guilds: List[GuildData] = []

################################################################################
    def load_guilds(self) -> None:

        for g in self._state.guilds:
            self._guilds.append(GuildData(self._state, g))

################################################################################
##### INTERNAL METHODS #########################################################
################################################################################
    def __getitem__(self, guild_id: int) -> Optional[GuildData]:

        for g in self._guilds:
            if g._parent.id == guild_id:
                return g

        return None

################################################################################
##### PROPERTIES ###############################################################
################################################################################

################################################################################
##### METHODS ##################################################################
################################################################################
    def get_guild(self, guild: Guild) -> GuildData:

        for g in self._guilds:
            if g._parent.id == guild.id:
                return g

################################################################################
